services:
  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    restart: always
    environment:
      - NODE_ENV=production
      - NEXTAUTH_URL=${NEXTAUTH_URL:-https://your-domain.ru}
      # Не храните реальные секреты здесь, используйте переменные окружения или .env.production
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=30d
    volumes:
      - nextjs_data:/app/.next/cache:ro
      - ./.env.production:/app/.env:ro
    networks:
      - app-network
    # Ограничения ресурсов
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    # Настройки безопасности
    security_opt:
      - no-new-privileges:true
    # Ограничение доступа к файловой системе (read-only)
    read_only: true
    # Только /tmp доступен для записи
    tmpfs:
      - /tmp
    # Проверка работоспособности
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Политика перезапуска
    restart_policy:
      condition: on-failure
      delay: 5s
      max_attempts: 3
      window: 120s

networks:
  app-network:
    driver: bridge
    # Улучшенная изоляция сети
    ipam:
      driver: default
      config:
        - subnet: "172.20.0.0/16"

volumes:
  nextjs_data: 