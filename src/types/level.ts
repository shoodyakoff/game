export enum LevelStage {
  // Этапы первого уровня
  INTRO = 'INTRO',
  TEAM_MEETING = 'TEAM_MEETING',
  PRODUCT_THINKING_THEORY = 'PRODUCT_THINKING_THEORY',
  PRODUCT_THINKING_PRACTICE = 'PRODUCT_THINKING_PRACTICE',
  UX_ANALYSIS_THEORY = 'UX_ANALYSIS_THEORY',
  UX_ANALYSIS_PRACTICE = 'UX_ANALYSIS_PRACTICE',
  METRICS_THEORY = 'METRICS_THEORY',
  METRICS_PRACTICE = 'METRICS_PRACTICE',
  DECISION_MAKING_THEORY = 'DECISION_MAKING_THEORY',
  DECISION_MAKING_PRACTICE = 'DECISION_MAKING_PRACTICE',
  FEEDBACK = 'FEEDBACK',
  QUIZ = 'QUIZ',
  COMPLETE = 'COMPLETE',

  // Этапы второго уровня
  STAKEHOLDERS_THEORY = 'STAKEHOLDERS_THEORY',
  STAKEHOLDER_BRIEFING = 'STAKEHOLDER_BRIEFING',
  REQUIREMENTS_THEORY = 'REQUIREMENTS_THEORY',
  REQUIREMENTS_PRACTICE = 'REQUIREMENTS_PRACTICE',
  USERS_RESEARCH_THEORY = 'USERS_RESEARCH_THEORY',
  USERS_RESEARCH_PRACTICE = 'USERS_RESEARCH_PRACTICE',
  COMPETITORS_THEORY = 'COMPETITORS_THEORY',
  COMPETITORS_PRACTICE = 'COMPETITORS_PRACTICE',
  PLANNING_THEORY = 'PLANNING_THEORY',
  PLANNING_PRACTICE = 'PLANNING_PRACTICE',
  PRESENTATION_THEORY = 'PRESENTATION_THEORY',
  PRESENTATION_PRACTICE = 'PRESENTATION_PRACTICE'
}

export interface Level {
  id: number;
  title: string;
  description: string;
  stages: LevelStage[];
  currentStage: LevelStage;
  progress: LevelProgress;
}

export interface LevelProgress {
  currentStage: LevelStage;
  completedStages: LevelStage[];
  score?: number;
  notes?: string[];
} 