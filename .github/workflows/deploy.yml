name: Deploy to TimeWeb

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Add server to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 176.124.219.223 >> ~/.ssh/known_hosts
      
      - name: Create .env.production with secrets
        run: |
          cat > .env.production << EOF
          # Clerk Authentication
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
          NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
          NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/dashboard
          NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/character/select
          NEXT_PUBLIC_CLERK_MOCK_MODE=true
          NEXT_PUBLIC_CLERK_NO_VERIFICATION=true

          # Настройки приложения
          NODE_ENV=production
          EOF
      
      - name: Deploy to TimeWeb
        env:
          SERVER_IP: 176.124.219.223
          SSH_USER: deploy
          CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
        run: |
          # Проверка подключения
          ssh $SSH_USER@$SERVER_IP "echo 'Connection successful'"
          
          # Копируем обновленные файлы конфигурации на сервер
          scp Dockerfile docker-compose.prod.yml .env.production $SSH_USER@$SERVER_IP:/home/deploy/game/src/
          
          # Создаем файл с переменными окружения на сервере
          ssh $SSH_USER@$SERVER_IP << 'ENDSSH'
            # Обновляем репозиторий
            cd /home/deploy/game/src
            git pull origin main
            
            # Копируем файлы конфигурации в корневую директорию
            cp Dockerfile docker-compose.prod.yml .env.production ../
            cd ..
            
            # Создаем файл с переменными окружения
            echo "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=\"$CLERK_PUBLISHABLE_KEY\"" > .env
            echo "CLERK_SECRET_KEY=\"$CLERK_SECRET_KEY\"" >> .env
            echo "NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in" >> .env
            echo "NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up" >> .env
            echo "NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/dashboard" >> .env
            echo "NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/character/select" >> .env
            echo "NEXT_PUBLIC_CLERK_MOCK_MODE=true" >> .env
            echo "NEXT_PUBLIC_CLERK_NO_VERIFICATION=true" >> .env
            
            # Запускаем сборку и деплой
            docker-compose -f docker-compose.prod.yml down
            docker-compose -f docker-compose.prod.yml up -d --build
            
            # Проверяем статус контейнеров
            docker ps
          ENDSSH 