#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–∞—Ç—á–∏–Ω–≥–∞ –º–æ–¥—É–ª–µ–π Clerk –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –≤ –º–æ–∫-—Ä–µ–∂–∏–º–µ

set -e  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö

echo "üîß –ü–∞—Ç—á–∏–Ω–≥ –º–æ–¥—É–ª–µ–π Clerk..."

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø–∞—Ç—á–∞, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
mkdir -p ./node_modules/@clerk/shared/dist
mkdir -p ./node_modules/@clerk/nextjs/dist/cjs/server
mkdir -p ./node_modules/@clerk/nextjs/dist/esm

# –ü–∞—Ç—á–∏–º keys.js –¥–ª—è –æ–±—Ö–æ–¥–∞ –æ—à–∏–±–∫–∏ atob
echo "–ü–∞—Ç—á–∏–Ω–≥ keys.js..."
cat > ./node_modules/@clerk/shared/dist/keys.js << 'EOL'
// –ü—Ä–æ–ø–∞—Ç—á–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å keys.js
// –ò–∑–±–µ–≥–∞–µ–º –æ—à–∏–±–∫–∏ —Å atob –≤ –º–æ–∫-—Ä–µ–∂–∏–º–µ

export function isomorphicAtob(str) { 
  return "mock-atob-result"; 
}

export function isPublishableKey() { 
  return true; 
}

export function parsePublishableKey() { 
  return { 
    frontendApi: "clerk.example.com", 
    instanceType: "test" 
  }; 
}
EOL

# –ü–∞—Ç—á–∏–º redirect.js –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∫–ª—é—á–∞
echo "–ü–∞—Ç—á–∏–Ω–≥ redirect.js (CJS –≤–µ—Ä—Å–∏—è)..."
cat > ./node_modules/@clerk/nextjs/dist/cjs/server/redirect.js << 'EOL'
// –ü—Ä–æ–ø–∞—Ç—á–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å redirect.js
"use strict";
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.redirect = void 0;

const redirect = (to) => {
  console.log("Mock redirect to:", to);
  // –ü—Ä–æ—Å—Ç–æ –∑–∞–≥–ª—É—à–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –±—É–¥–µ—Ç –ø—ã—Ç–∞—Ç—å—Å—è –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–∏
  return {};
};

exports.redirect = redirect;
EOL

# –ü–∞—Ç—á–∏–º chunk-RSOCGYTF.mjs
echo "–ü–∞—Ç—á–∏–Ω–≥ chunk-RSOCGYTF.mjs..."
mkdir -p ./node_modules/@clerk/shared/dist
cat > ./node_modules/@clerk/shared/dist/chunk-RSOCGYTF.mjs << 'EOL'
// –ü—Ä–æ–ø–∞—Ç—á–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å chunk-RSOCGYTF.mjs
// –ò–∑–±–µ–≥–∞–µ–º –æ—à–∏–±–∫–∏ —Å MessageEvent –≤ Edge Runtime

// –≠—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
export const createClerkClientObject = () => ({
  mockKey: true,
  version: 'mocked'
});

export const getClerkApiUrl = () => 'https://api.clerk.dev';

export const isHttpOrHttps = (url) => true;
EOL

# –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é Clerk NextJS –¥–ª—è –º–æ–∫-—Ä–µ–∂–∏–º–∞
echo "–°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∏–Ω–¥–µ–∫—Å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ Clerk..."
cat > ./node_modules/@clerk/nextjs/dist/esm/index.js << 'EOL'
// –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –º–æ–∫-–≤–µ—Ä—Å–∏—è @clerk/nextjs
// –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏

import React from 'react';

// –ú–æ–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
export const ClerkProvider = ({children}) => React.createElement(React.Fragment, null, children);
export const SignIn = () => React.createElement('div', null, 'Mock SignIn Component');
export const SignUp = () => React.createElement('div', null, 'Mock SignUp Component');
export const SignedIn = ({children}) => React.createElement(React.Fragment, null, children);
export const SignedOut = () => React.createElement(React.Fragment, null, null);
export const UserButton = () => React.createElement('button', null, 'User');

// –ú–æ–∫ —Ö—É–∫–æ–≤
export const useUser = () => ({ 
  isLoaded: true, 
  isSignedIn: true, 
  user: {
    id: 'mock-user-id',
    firstName: 'Mock',
    lastName: 'User',
    username: 'mockuser',
    imageUrl: 'https://via.placeholder.com/150',
    fullName: 'Mock User',
  }
});

export const useAuth = () => ({
  isLoaded: true,
  isSignedIn: true,
  signIn: () => Promise.resolve(),
  signOut: () => Promise.resolve()
});

// –ú–æ–∫ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
export const getAuth = () => ({
  userId: 'mock-user-id',
  sessionId: 'mock-session-id',
  getToken: () => Promise.resolve('mock-token'),
});

export const auth = () => ({
  userId: 'mock-user-id',
  sessionId: 'mock-session-id',
  getToken: () => Promise.resolve('mock-token'),
  protect: () => ({})
});

export const clerkClient = {
  users: {
    getUser: () => Promise.resolve({
      id: 'mock-user-id',
      firstName: 'Mock',
      lastName: 'User',
      username: 'mockuser',
      imageUrl: 'https://via.placeholder.com/150',
    }),
    getUserList: () => Promise.resolve([{
      id: 'mock-user-id',
      firstName: 'Mock',
      lastName: 'User',
      username: 'mockuser', 
      imageUrl: 'https://via.placeholder.com/150',
    }])
  }
};

// –¢–∞–∫–∂–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è ESM –≤–µ—Ä—Å–∏–∏
export const redirectToSignIn = () => {};
export const withClerkMiddleware = (middleware) => middleware;
export const authMiddleware = (options) => (req) => req;
EOL

echo "–°–æ–∑–¥–∞–Ω–∏–µ ESM –≤–µ—Ä—Å–∏–∏ –∏–Ω–¥–µ–∫—Å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞..."
cp ./node_modules/@clerk/nextjs/dist/esm/index.js ./node_modules/@clerk/nextjs/dist/esm/index.mjs

echo "‚úÖ –ü–∞—Ç—á–∏–Ω–≥ –º–æ–¥—É–ª–µ–π Clerk –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!" 